buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:5.0.0"
    }
}

plugins {
    id 'fabric-loom' version '0.4.29'
    id 'maven-publish'
}

apply plugin: 'com.github.johnrengelman.shadow'

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

tasks.remapJar.dependsOn(shadowJar)
(tasks.remapJar.input).set(shadowJar.archivePath)

minecraft {
}

dependencies {
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modCompile "net.fabricmc:fabric-loader:${project.loader_version}"

    modCompile "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    compile "org.reflections:reflections:0.9.12"
    compile "com.atlassian.commonmark:commonmark:0.15.2"
    compile "com.atlassian.commonmark:commonmark-ext-image-attributes:0.15.2"
    compile "com.atlassian.commonmark:commonmark-ext-yaml-front-matter:0.15.2"
    compile "org.jsoup:jsoup:1.13.1"

}

processResources {
    inputs.property "version", project.version

    from(sourceSets.main.resources.srcDirs) {
        include "fabric.mod.json"
        expand "version": project.version
    }

    from(sourceSets.main.resources.srcDirs) {
        exclude "fabric.mod.json"
    }
}

// ensure that the encoding is set to UTF-8, no matter what the system default is
// this fixes some edge cases with special characters not displaying correctly
// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
// if it is present.
// If you remove this task, sources will not be generated.
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = "sources"
    from sourceSets.main.allSource
}

shadowJar {
    dependencies {
        include(dependency("org.reflections:reflections:0.9.12"))
        include(dependency("com.atlassian.commonmark:commonmark:0.15.2"))
        include(dependency("com.atlassian.commonmark:commonmark-ext-image-attributes:0.15.2"))
        include(dependency("com.atlassian.commonmark:commonmark-ext-yaml-front-matter:0.15.2"))
        include(dependency("org.jsoup:jsoup:1.13.1"))
    }
}

jar {
    from "LICENSE"
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            // add all the jars that should be included when publishing to maven
            artifact(remapJar) {
                builtBy remapJar
            }
            artifact(sourcesJar) {
                builtBy remapSourcesJar
            }
            artifact(shadowJar) {
                builtBy remapJar
            }
        }
    }

    // select the repositories you want to publish to
    repositories {
        // uncomment to publish to the local maven
        // mavenLocal()
    }
}
