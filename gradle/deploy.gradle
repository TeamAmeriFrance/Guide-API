buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath group: 'gradle.plugin.com.modrinth.minotaur', name: 'Minotaur', version: '1.2.1'
    }
}


apply plugin: 'maven-publish'
tasks.withType(GenerateModuleMetadata) {
    enabled = false
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            // Allows the maven pom file to be modified.
            pom.withXml {
                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    // Check if the dependency has been mapped with MCP
                    if (dep.version.last().value().last().contains('_mapped_snapshot_') || dep.version.last().value().last().contains('_mapped_stable_') || dep.version.last().value().last().contains('_mapped_official_')) {

                        // Remove the MCP mapped artifact from the dependency list.
                        println 'Surpressing MCP mapped artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                        assert dep.parent().remove(dep)
                    }
                }
            }

            pom {
                description = 'An Minecraft mod that allows you to become a vampire'

                scm {
                    url = 'https://github.com/maxanier/Guide-API'
                    connection = 'scm:git:git://github.com/maxanier/Guide-API.git'
                    developerConnection = 'scm:git:git@github.com:maxanier/Guide-API.git'
                }

                issueManagement {
                    system = 'github'
                    url = 'https://github.com/maxanier/Guide-API/issues'
                }

                developers {
                    developer {
                        id = 'maxanier'
                        name = 'maxanier'
                        roles = ["developer"]
                    }
                }
            }

            // Adds the sources as an artifact.
            artifact sourcesJar {
                classifier 'sources'
            }

            // Adds the deobfuscated jar as an artifact.
            artifact deobfJar {
                classifier 'deobf'
            }

        }
    }

    repositories {
        maven {
            // Sets the login credentials for your maven.
            credentials {
                username findProperty('maxanier_maven_alias')
                password findProperty('maxanier_maven_token')
            }

            // Sets the maven URL
            url findProperty('maxanier_maven_url')
        }
    }
}

curseforge {
    if (project.hasProperty("CURSEFORGE_API")) {
        apiKey = project.CURSEFORGE_API
    } else {
        apiKey = "DUMMY"
    }
    project {
        id = project.curse_id

        if (project.type == "beta") {
            releaseType = 'beta'
            //changelog = new File("resources/changelog/${project.version}.txt").text
        } else if (project.type == "release") {
            releaseType = 'release'
        } else {
            releaseType = 'alpha'
            changelog = "This version should not be used in your 'productive' world. It contains the latest features, but also the latest bugs.\n Probably not all features are finished.\n To see what might have changed visit our Github page and browse the latest commits."
        }
        addGameVersion project.minecraft_version

        mainArtifact(jar) {
            displayName = "Guide-API-VP-${project.minecraft_version}-${project.mod_version}"
        }

        relations {
            optionalLibrary 'jei'
        }

    }


}

//
//uploadArchives {
//    tasks.uploadArchives.dependsOn 'build'
//
//    repositories {
//        add getProject().repositories.mavenLocal()
//    }
//    repositories.mavenDeployer {
//        configuration = configurations.deployerJars
//
//        if (!project.hasProperty("local")&& project.hasProperty("filesmaven_url")) {
//            logger.info('Publishing to files server')
//            repository(url: project.filesmaven_url) {
//                authentication(userName: project.filesmaven_username, password: project.filesmaven_key)
//            }
//        } else if (!project.hasProperty("local")&&System.getenv().MAVEN_URL) {
//            logger.info('Publishing to files server')
//            repository(url: System.getenv().MAVEN_URL) {
//                authentication(userName: System.getenv().MAVEN_USERNAME, password: System.getenv().MAVEN_KEY)
//            }
//        } else {
//            logger.info('Publishing to repo folder')
//            repository(url: 'file://localhost/' + project.file('../../../.m2/repository').getAbsolutePath())
//        }
//
//        pom {
//            groupId = project.group
//            version = project.version
//            artifactId = project.archivesBaseName
//        }
//        pom.project {
//            name project.archivesBaseName
//            packaging 'jar'
//            description 'An Minecraft mod that allows you to become a vampire'
//            url 'https://maxanier.de/projects/guide-api'
//
//            scm {
//                url 'https://github.com/maxanier/Guide-API'
//                connection 'scm:git:git://github.com/maxanier/Guide-API.git'
//                developerConnection 'scm:git:git@github.com:maxanier/Guide-API.git'
//            }
//
//            issueManagement {
//                system 'github'
//                url 'https://github.com/maxanier/Guide-API/issues'
//            }
//
//            developers {
//                developer {
//                    id 'maxanier'
//                    name 'maxanier'
//                    roles { role 'developer' }
//                }
//            }
//        }
//
//
//    }
//}

import com.modrinth.minotaur.TaskModrinthUpload

// Make sure it runs after build!
task modrinth (type: TaskModrinthUpload){
    onlyIf {
        project.hasProperty("MODRINTH_API") // Only attempt to run this task if the MODRINTH variable is set, otherwise SKIP it
    }
    if (project.type == "beta") {
        versionType = 'BETA'
        //changelog = new File("resources/changelog/${project.version}.txt").text
    } else if (project.type == "release") {
        versionType = 'RELEASE'
    } else {
        versionType = 'ALPHA'
        changelog = "This version should not be used in your 'productive' world. It contains the latest features, but also the latest bugs.\n Probably not all features are finished.\n To see what might have changed visit our Github page and browse the latest commits."
    }
    token = findProperty("MODRINTH_API") ?: "DUMMY"
    projectId = project.modrinth_id
    versionName = "Guide-API-VP-${project.minecraft_version}-${project.mod_version}"
    versionNumber = "${project.minecraft_version}-${project.mod_version}"
    uploadFile = jar
    addGameVersion(project.minecraft_version)
    addLoader('forge')
}